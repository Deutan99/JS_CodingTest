var isAnagram = function(s, t) {
    const arr = s.split("").sort().join("");
    const arr2 = t.split("").sort().join("");
    if(arr === arr2) {
        return true;
    } else {
        return false;
    }
};

// 이 코드의 시간 복잡도는 O(n log n)이고, 공간 복잡도는 O(n)입니다.

// 시간 복잡도:

// - **`split("")`**: 문자열을 배열로 변환하는데 O(n)의 시간이 소요됩니다. **`s`**와 **`t`** 각각에 대해 2번 호출되므로, 총 O(2n) = O(n)의 시간이 소요됩니다.
// - **`sort()`**: 배열을 정렬하는데 일반적으로 O(n log n)의 시간이 소요됩니다. **`arr`**와 **`arr2`** 각각에 대해 2번 호출되므로, 총 O(4n log n) = O(n log n)의 시간이 소요됩니다.
// - **`join("")`**: 배열을 문자열로 변환하는데 O(n)의 시간이 소요됩니다. **`arr`**와 **`arr2`** 각각에 대해 2번 호출되므로, 총 O(2n) = O(n)의 시간이 소요됩니다.
// - **`===`**: 문자열 비교 연산으로 O(n)의 시간이 소요됩니다. **`arr`**와 **`arr2`**를 비교하는데 각각 1번 호출되므로, 총 O(2n) = O(n)의 시간이 소요됩니다.

// 따라서, 전체적인 시간 복잡도는 O(n log n) + O(n) + O(n) + O(n) = O(n log n)입니다.

// 공간 복잡도:

// - **`arr`**와 **`arr2`**: **`s`**와 **`t`** 각각의 길이에 비례하는 배열을 생성하므로, 공간 복잡도는 O(n)입니다.

// 따라서, 전체적인 공간 복잡도는 O(n)입니다.